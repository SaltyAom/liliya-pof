{"version":3,"sources":["../node_modules/process/browser.js","../node_modules/path-browserify/index.js","../node_modules/electron/index.js","js/libs/node.js","js/libs/directory.js","js/libs/helpers.js","js/index/template.js","js/index/generate.js","js/index.js"],"names":["cachedSetTimeout","cachedClearTimeout","process","module","exports","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","e","call","runClearTimeout","marker","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","Item","array","noop","nextTick","args","Array","arguments","i","push","prototype","apply","title","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","fs","require","path","pathFile","join","__dirname","getElectronPath","existsSync","executablePath","readFileSync","remote","basepath","app","getAppPath","removeDirectory","readdirSync","forEach","file","curPath","lstatSync","isDirectory","unlinkSync","rmdirSync","assets","composeAssets","replace","toLowerCase","composeEditorAssets","content","composeContent","dist","composeDist","id","document","getElementById","$","tag","querySelectorAll","onReady","callback","addEventListener","getTemplate","template","cloneNode","select","querySelector","getFileName","url","URLSearchParams","window","location","search","get","getIndex","element","from","parentElement","children","indexOf","pushObject","object","index","newValue","splice","removeObject","generateHash","Math","random","toString","substring","imageToFigure","nodeName","event","target","figureToImage","applyProjectTemplate","src","alt","image","setAttribute","classList","remove","newTitle","textContent","renderProject","project","root","preloadProject","replacePreloadProject","appendChild","preload","style","display","cleanupPreload","removeChild","showAvailableProject","projectList","generateProject","resizeImage","imagePath","width","options","webp","Promise","resolve","Image","canvas","createElement","ctx","getContext","onload","height","drawImage","toBlob","blob","reader","FileReader","onloadend","Uint8Array","result","readAsArrayBuffer","includes","packContent","contentList","contentPath","mkdirSync","assetsPath","cssPath","copyFileSync","contentFile","packImage","parsedBlogContent","JSON","parse","encoding","header","blog","blogContent","ogFileName","composeSrcSet","renameExtension","getImageType","parseUrl","map","build","reduce","previous","nextStory","previousStory","nextStoryImage","previousStoryImage","RegExp","addPreloadToFileName","add2xToFileName","inlineCSS","minifyCSS","web","filter","addTitleToFileName","minifyHTML","writeFileSync","blogAssets","localAssets","asLocalContent","stringify","Object","assign","node","footer","json","href","next","packTitle","packPreload","packFile","serviceWorker","cachedAssets","assetFolder","assetsOrFolder","fileName","contentName","contentFolder","asset","console","log","dest","destination","size","multiplier","minimizeAndPackCSS","css","built","child","splitSrc","split","splited","extension","pop","parsedTitle","parsedFile","type","html","m","$1","trim","anchor","click"],"mappings":"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","file":"js.ffdb80dc.js","sourceRoot":"../src","sourcesContent":["// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  if (path.length === 0) return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = code === 47 /*/*/;\n  var end = -1;\n  var matchedSlash = true;\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) return hasRoot ? '/' : '.';\n  if (hasRoot && end === 1) {\n    // return '//';\n    // Backwards-compat fix:\n    return '/';\n  }\n  return path.slice(0, end);\n};\n\nfunction basename(path) {\n  if (typeof path !== 'string') path = path + '';\n\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n\n  if (end === -1) return '';\n  return path.slice(start, end);\n}\n\n// Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\nexports.basename = function (path, ext) {\n  var f = basename(path);\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\nexports.extname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  var startDot = -1;\n  var startPart = 0;\n  var end = -1;\n  var matchedSlash = true;\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find\n  var preDotState = 0;\n  for (var i = path.length - 1; i >= 0; --i) {\n    var code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n    if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension\n      matchedSlash = false;\n      end = i + 1;\n    }\n    if (code === 46 /*.*/) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n    } else if (startDot !== -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension\n      preDotState = -1;\n    }\n  }\n\n  if (startDot === -1 || end === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n  return path.slice(startDot, end);\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","var fs = require('fs')\nvar path = require('path')\n\nvar pathFile = path.join(__dirname, 'path.txt')\n\nfunction getElectronPath () {\n  if (fs.existsSync(pathFile)) {\n    var executablePath = fs.readFileSync(pathFile, 'utf-8')\n    if (process.env.ELECTRON_OVERRIDE_DIST_PATH) {\n      return path.join(process.env.ELECTRON_OVERRIDE_DIST_PATH, executablePath)\n    }\n    return path.join(__dirname, 'dist', executablePath)\n  } else {\n    throw new Error('Electron failed to install correctly, please delete node_modules/electron and try installing again')\n  }\n}\n\nmodule.exports = getElectronPath()\n","export const remote = require(\"electron\").remote,\n\tfs = remote.require(\"fs\"),\n\tbasepath = remote.app.getAppPath()\n\nexport const removeDirectory = (path) => {\n\tif (fs.existsSync(path)) {\n\t\tfs.readdirSync(path).forEach(file => {\n\t\t\tconst curPath = `${path}/${file}`\n\t\t\tif (fs.lstatSync(curPath).isDirectory()) {\n\t\t\t\t// recurse\n\t\t\t\tremoveDirectory(curPath)\n\t\t\t} else {\n\t\t\t\t// delete file\n\t\t\t\tfs.unlinkSync(curPath)\n\t\t\t}\n\t\t})\n\t\tfs.rmdirSync(path)\n\t}\n}\n","import { basepath } from './node.js'\n\nexport const assets = `${basepath}/generated/assets`,\n    composeAssets = (name) => `${assets}/${name.replace(/\\ /, \"-\").toLowerCase()}`,\n    composeEditorAssets = (name) => `${assets}/${name}`,\n    content = `${basepath}/generated/content`,\n    composeContent = (name) => `${content}/${name.replace(/\\ /, \"-\").toLowerCase()}`,\n    dist = `${basepath}/generated/dist`,\n    composeDist = (name) => `${dist}/${name.replace(/\\ /, \"-\").toLowerCase()}`","export const id = (id) => document.getElementById(id),\n\t$ = (tag) => document.querySelectorAll(tag),\n\tonReady = (callback) =>\n\t\tdocument.addEventListener(\"DOMContentLoaded\", callback),\n\tgetTemplate = (id) => {\n\t\tlet template = document.getElementById(id)\n\n\t\treturn template.content.cloneNode(true)\n\t},\n\tselect = (tag) => document.querySelector(tag),\n\tgetFileName = () => {\n\t\tlet url = new URLSearchParams(window.location.search)\n\n\t\treturn url.get(\"file\")\n\t},\n\tgetIndex = (element) =>\n\t\tArray.from(element.parentElement.children).indexOf(element),\n\tpushObject = (object, index, newValue) =>\n\t\tobject.splice(index + 1, 0, newValue),\n\tremoveObject = (object, index) => object.splice(index, 1),\n\tgenerateHash = () => Math.random().toString(36).substring(7),\n\timageToFigure = (element) =>\n\t\telement.nodeName === \"IMG\" ? event.target.parentElement : event.target,\n\tfigureToImage = (element) =>\n\t\telement.nodeName === \"FIGURE\"\n\t\t\t? element\n\t\t\t: element.nodeName.querySelector(\".img\")\n","import { id, getTemplate, $ } from \"../libs/helpers.js\"\n\nconst applyProjectTemplate = (\n\t\t{ src, title, alt = \"\", file },\n\t\ttemplate = getTemplate(\"project-template\")\n\t) => {\n\t\tconst image = template.querySelector(\".image\")\n\t\timage.setAttribute(\"src\", src)\n\t\timage.setAttribute(\"alt\", alt)\n\t\timage.classList.remove(\"-preload\")\n\n\t\ttemplate.setAttribute(\"href\", `editor.html?file=${file}`)\n\n\t\tconst newTitle = template.querySelector(\".title\")\n\t\tnewTitle.textContent = title\n\t\tnewTitle.classList.remove(\"-preload\")\n\n\t\treturn template\n\t},\n\trenderProject = (project) => {\n\t\tlet root = id(\"project-selector\"),\n\t\t\tpreloadProject = $(\"#project-selector > .project.-preload\")\n\n\t\tif (preloadProject.length)\n\t\t\treplacePreloadProject(project, preloadProject[0])\n\t\telse root.appendChild(applyProjectTemplate(project))\n\t},\n\treplacePreloadProject = (project, preload) => {\n\t\tpreload.classList.remove(\"-preload\")\n\t\tpreload.querySelector(\".figure\").classList.remove(\"-preload\")\n\t\tpreload.querySelector(\".image\").style.display = \"\"\n\t\tpreload.setAttribute(\"href\", `editor.html?file=${project.file}`)\n\n\t\tapplyProjectTemplate(project, preload)\n\t},\n\tcleanupPreload = () => {\n\t\tlet preloadProject = $(\"#project-selector > .project.-preload\")\n\n\t\tpreloadProject.forEach((preload) => {\n\t\t\tpreload.parentElement.removeChild(preload)\n\t\t})\n\t}\n\nexport const showAvailableProject = (projectList) => {\n\tprojectList.forEach((project) => {\n\t\trenderProject(project)\n\t})\n\tcleanupPreload()\n}\n","import { fs, basepath, removeDirectory } from \"../libs/node.js\"\nimport {\n\tcontent as contentPath,\n\tcomposeContent,\n\tdist,\n\tcomposeDist,\n\tassets\n} from \"../libs/directory.js\"\n\nconst resizeImage = (imagePath, width = 1280, options = { webp: false }) =>\n\tnew Promise((resolve) => {\n\t\tlet { webp } = options\n\n\t\tlet image = new Image(),\n\t\t\tcanvas = document.createElement(\"canvas\"),\n\t\t\tctx = canvas.getContext(\"2d\")\n\n\t\timage.onload = () => {\n\t\t\tlet height = width * (image.height / image.width)\n\n\t\t\tcanvas.width = width\n\t\t\tcanvas.height = height\n\t\t\tctx.drawImage(image, 0, 0, width, height)\n\n\t\t\tcanvas.toBlob(\n\t\t\t\t(blob) => {\n\t\t\t\t\tlet reader = new FileReader()\n\n\t\t\t\t\treader.onloadend = () => {\n\t\t\t\t\t\tresolve(new Uint8Array(reader.result))\n\t\t\t\t\t}\n\n\t\t\t\t\treader.readAsArrayBuffer(blob)\n\t\t\t\t},\n\t\t\t\twebp\n\t\t\t\t\t? \"image/webp\"\n\t\t\t\t\t: imagePath.includes(\"png\")\n\t\t\t\t\t? \"image/png\"\n\t\t\t\t\t: \"image/jpeg\",\n\t\t\t\t0.65\n\t\t\t)\n\t\t}\n\n\t\timage.src = imagePath\n\t})\n\nconst generateProject = async () => {\n\tlet contentList = fs.readdirSync(contentPath)\n\n\t/* Pack Assets */\n\tif (fs.existsSync(dist)) removeDirectory(dist)\n\n\tfs.mkdirSync(dist)\n\n\tlet assetsPath = `${dist}/assets`,\n\t\tcssPath = `${dist}/assets/css`\n\n\tfs.mkdirSync(assetsPath)\n\tfs.mkdirSync(cssPath)\n\tfs.mkdirSync(`${dist}/content`)\n\n\tfs.copyFileSync(\n\t\t`${basepath}/assets/liliya.min.js`,\n\t\t`${dist}/assets/liliya.js`\n\t)\n\n\t/* Generate HTML */\n\tlet template = fs.readFileSync(`${basepath}/assets/template.html`)\n\n\tlet packContent = () =>\n\t\tnew Promise((resolve) =>\n\t\t\tcontentList.forEach(async (contentFile, index) => {\n\t\t\t\tlet parsedBlogContent = JSON.parse(\n\t\t\t\t\t\tfs.readFileSync(composeContent(contentFile), {\n\t\t\t\t\t\t\tencoding: \"utf8\"\n\t\t\t\t\t\t})\n\t\t\t\t\t),\n\t\t\t\t\t{ content, header } = parsedBlogContent,\n\t\t\t\t\t{ title, src, alt } = header\n\n\t\t\t\t/* Generate Blog */\n\t\t\t\tlet blog = `${template}`,\n\t\t\t\t\tblogContent = `<header id=\"header\"><h1 id=\"title\">${title}</h1>`\n\n\t\t\t\t/* Generate Header */\n\t\t\t\tlet ogFileName = getFileName(src)\n\t\t\t\tblogContent += `<figure class=\"figure\" id=\"header-image-wrapper\">\n\t\t\t\t<picture>\n\t\t\t\t\t<source class=\"webp\" srcset=\"${composeSrcSet(\n\t\t\t\t\t\ttitle,\n\t\t\t\t\t\trenameExtension(ogFileName, \"webp\")\n\t\t\t\t\t)}\" sizes=\"(max-width: 640px) 640px\" type=\"image/webp\" />\n\t\t\t\t\t<source class=\"fallback\" srcset=\"${composeSrcSet(\n\t\t\t\t\t\ttitle,\n\t\t\t\t\t\togFileName\n\t\t\t\t\t)}\" sizes=\"(max-width: 640px) 640px\" type=\"${getImageType(ogFileName)}\" />\n\t\t\t\t\t<img id=\"header-image\" class=\"img\" src=\"/assets/${parseUrl(title)}/${parseUrl(\n\t\t\t\t\togFileName\n\t\t\t\t)}\" alt=\"${alt}\" loading=\"lazy\" />\n\t\t\t\t\t</picture>\n\t\t\t\t</figure>\n\t\t\t</header>`\n\n\t\t\t\t/* Generate Content */\n\t\t\t\tblogContent += content\n\t\t\t\t\t.map((element) => build(title, element))\n\t\t\t\t\t.reduce((previous, blog) => (previous += blog))\n\n\t\t\t\tblog = blog.replace(\"__Liliya_title__\", title)\n\t\t\t\tblog = blog.replace(\"__Liliya_blog__\", blogContent)\n\n\t\t\t\t/* Generate Link */\n\t\t\t\tlet nextStory =\n\t\t\t\t\t\tindex < contentList.length - 1\n\t\t\t\t\t\t\t? contentList[index + 1]\n\t\t\t\t\t\t\t: contentList[0],\n\t\t\t\t\tpreviousStory =\n\t\t\t\t\t\tindex > 0\n\t\t\t\t\t\t\t? contentList[index - 1]\n\t\t\t\t\t\t\t: contentList[contentList.length - 1]\n\n\t\t\t\tnextStory = JSON.parse(\n\t\t\t\t\tfs.readFileSync(composeContent(nextStory), {\n\t\t\t\t\t\tencoding: \"utf8\"\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t\tpreviousStory = JSON.parse(\n\t\t\t\t\tfs.readFileSync(composeContent(previousStory), {\n\t\t\t\t\t\tencoding: \"utf8\"\n\t\t\t\t\t})\n\t\t\t\t)\n\n\t\t\t\tblog = blog.replace(\n\t\t\t\t\t\"__Liliya_next__\",\n\t\t\t\t\t`/content/${parseUrl(nextStory.header.title)}`\n\t\t\t\t)\n\t\t\t\tblog = blog.replace(\n\t\t\t\t\t\"__Liliya_previous__\",\n\t\t\t\t\t`/content/${parseUrl(previousStory.header.title)}`\n\t\t\t\t)\n\n\t\t\t\tblog = blog.replace(\n\t\t\t\t\t\"__Liliya_next_title__\",\n\t\t\t\t\tnextStory.header.title\n\t\t\t\t)\n\t\t\t\tblog = blog.replace(\n\t\t\t\t\t\"__Liliya_previous_title__\",\n\t\t\t\t\tpreviousStory.header.title\n\t\t\t\t)\n\n\t\t\t\tlet nextStoryImage = getFileName(nextStory.header.src),\n\t\t\t\t\tpreviousStoryImage = getFileName(previousStory.header.src)\n\n\t\t\t\tblog = blog.replace(\n\t\t\t\t\tnew RegExp(\"__Liliya_next_src__\", \"g\"),\n\t\t\t\t\t`\n\t\t\t\t\t<figure class=\"figure\">\n\t\t\t\t\t\t<picture>\n\t\t\t\t\t\t\t<source class=\"webp\" srcset=\"/assets/${parseUrl(\n\t\t\t\t\t\t\t\tnextStory.header.title\n\t\t\t\t\t\t\t)}/${renameExtension(\n\t\t\t\t\t\tparseUrl(addPreloadToFileName(nextStoryImage)),\n\t\t\t\t\t\t\"webp\"\n\t\t\t\t\t)} ,/assets/${parseUrl(\n\t\t\t\t\t\tnextStory.header.title\n\t\t\t\t\t)}/${renameExtension(\n\t\t\t\t\t\tparseUrl(\n\t\t\t\t\t\t\tadd2xToFileName(\n\t\t\t\t\t\t\t\taddPreloadToFileName(nextStoryImage)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t),\n\t\t\t\t\t\t\"webp\"\n\t\t\t\t\t)} 2x\" sizes=\"(max-width: 400px) 400px\" type=\"image/webp\" />\n\t\t\t\t\t\t\t<source class=\"fallback\" srcset=\"/assets/${parseUrl(\n\t\t\t\t\t\t\t\tnextStory.header.title\n\t\t\t\t\t\t\t)}/${parseUrl(\n\t\t\t\t\t\taddPreloadToFileName(nextStoryImage)\n\t\t\t\t\t)} ,/assets/${parseUrl(nextStory.header.title)}/${parseUrl(\n\t\t\t\t\t\taddPreloadToFileName(nextStoryImage)\n\t\t\t\t\t)} 2x\" sizes=\"(max-width: 400px) 400px\" type=\"${getImageType(nextStoryImage)}\" />\n\t\t\t\t\t\t\t<img class=\"img preload-story\" src=\"/assets/${parseUrl(nextStory.header.title)}/${parseUrl(\n\t\t\t\t\t\taddPreloadToFileName(nextStoryImage)\n\t\t\t\t\t)}\" alt=\"${nextStory.header.alt}\" loading=\"lazy\" />\n\t\t\t\t\t\t</picture>\n\t\t\t\t\t</figure>\n\t\t\t\t\t`\n\t\t\t\t)\n\t\t\t\tblog = blog.replace(\n\t\t\t\t\tnew RegExp(\"__Liliya_previous_src__\", \"g\"),\n\t\t\t\t\t`\n\t\t\t\t\t<figure class=\"figure\">\n\t\t\t\t\t\t<picture>\n\t\t\t\t\t\t\t<source class=\"webp\" srcset=\"/assets/${parseUrl(\n\t\t\t\t\t\t\t\tpreviousStory.header.title\n\t\t\t\t\t\t\t)}/${renameExtension(\n\t\t\t\t\t\tparseUrl(addPreloadToFileName(previousStoryImage)),\n\t\t\t\t\t\t\"webp\"\n\t\t\t\t\t)} ,/assets/${parseUrl(\n\t\t\t\t\t\tpreviousStory.header.title\n\t\t\t\t\t)}/${renameExtension(\n\t\t\t\t\t\tparseUrl(\n\t\t\t\t\t\t\tadd2xToFileName(\n\t\t\t\t\t\t\t\taddPreloadToFileName(previousStoryImage)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t),\n\t\t\t\t\t\t\"webp\"\n\t\t\t\t\t)} 2x\" sizes=\"(max-width: 400px) 400px\" type=\"image/webp\" />\n\t\t\t\t\t\t\t<source class=\"fallback\" srcset=\"/assets/${parseUrl(\n\t\t\t\t\t\t\t\tpreviousStory.header.title\n\t\t\t\t\t\t\t)}/${parseUrl(\n\t\t\t\t\t\taddPreloadToFileName(previousStoryImage)\n\t\t\t\t\t)} ,/assets/${parseUrl(\n\t\t\t\t\t\tpreviousStory.header.title\n\t\t\t\t\t)}/${parseUrl(\n\t\t\t\t\t\tadd2xToFileName(\n\t\t\t\t\t\t\taddPreloadToFileName(previousStoryImage)\n\t\t\t\t\t\t)\n\t\t\t\t\t)} 2x\" sizes=\"(max-width: 400px) 400px\" type=\"${getImageType(previousStoryImage)}\" />\n\t\t\t\t\t\t\t<img class=\"img preload-story\" src=\"/assets/${parseUrl(\n\t\t\t\t\t\t\t\tpreviousStory.header.title\n\t\t\t\t\t\t\t)}/${parseUrl(\n\t\t\t\t\t\taddPreloadToFileName(previousStoryImage)\n\t\t\t\t\t)}\" alt=\"${previousStory.header.alt}\" loading=\"lazy\" />\n\t\t\t\t\t\t</picture>\n\t\t\t\t\t</figure>\n\t\t\t\t\t`\n\t\t\t\t)\n\n\t\t\t\tblog = blog.replace(\n\t\t\t\t\t\"__Liliya_next_alt__\",\n\t\t\t\t\t`/assets/${nextStory.header.alt}/${nextStoryImage}`\n\t\t\t\t)\n\t\t\t\tblog = blog.replace(\n\t\t\t\t\t\"__Liliya_previous_alt__\",\n\t\t\t\t\t`/assets/${previousStory.header.alt}/${previousStoryImage}`\n\t\t\t\t)\n\n\t\t\t\tblog = blog.replace(\n\t\t\t\t\tnew RegExp(\"__Liliya_previous_json__\", \"g\"),\n\t\t\t\t\tparseUrl(`/assets/${previousStory.header.title}/data.json`)\n\t\t\t\t)\n\t\t\t\tblog = blog.replace(\n\t\t\t\t\tnew RegExp(\"__Liliya_next_json__\", \"g\"),\n\t\t\t\t\tparseUrl(`/assets/${nextStory.header.title}/data.json`)\n\t\t\t\t)\n\n\t\t\t\t/* Generate Inline CSS */\n\t\t\t\tlet inlineCSS = minifyCSS(\n\t\t\t\t\tfs.readFileSync(`${basepath}/src/styles/init.css`, {\n\t\t\t\t\t\tencoding: \"utf8\"\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t\tinlineCSS += minifyCSS(\n\t\t\t\t\tfs.readFileSync(`${basepath}/src/styles/blog.css`, {\n\t\t\t\t\t\tencoding: \"utf8\"\n\t\t\t\t\t})\n\t\t\t\t)\n\n\t\t\t\tblog = blog.replace(\"/* __Liliya_style__ */\", inlineCSS)\n\n\t\t\t\t/* ! SEO */\n\t\t\t\tlet web = \"https://liliya.saltyaom.com\"\n\n\t\t\t\tblog = blog.replace(\n\t\t\t\t\tnew RegExp(\"__Liliya_seo_title__\", \"g\"),\n\t\t\t\t\theader.title\n\t\t\t\t)\n\t\t\t\tblog = blog.replace(\n\t\t\t\t\tnew RegExp(\"__Liliya_seo_description__\", \"g\"),\n\t\t\t\t\tcontent.filter((element) => element.nodeName === \"p\")[0]\n\t\t\t\t\t\t.textContent || \"Project Liliya\"\n\t\t\t\t)\n\t\t\t\tblog = blog.replace(\n\t\t\t\t\tnew RegExp(\"__Liliya_seo_image__\", \"g\"),\n\t\t\t\t\t`${web}/assets/${parseUrl(header.title)}/${addTitleToFileName(\n\t\t\t\t\t\tparseUrl(getFileName(header.src))\n\t\t\t\t\t)}`\n\t\t\t\t)\n\t\t\t\tblog = blog.replace(\n\t\t\t\t\tnew RegExp(\"__Liliya_seo_url__\", \"g\"),\n\t\t\t\t\t`${web}/content/${parseUrl(header.title)}`\n\t\t\t\t)\n\n\t\t\t\tblog = blog.replace(\n\t\t\t\t\tnew RegExp(\"__Liliya_next_href__\", \"g\"),\n\t\t\t\t\t`/content/${parseUrl(header.title)}`\n\t\t\t\t)\n\t\t\t\tblog = blog.replace(\n\t\t\t\t\tnew RegExp(\"__Liliya_previous_href__\", \"g\"),\n\t\t\t\t\t`/content/${parseUrl(header.title)}`\n\t\t\t\t)\n\n\t\t\t\tblog = minifyHTML(blog)\n\n\t\t\t\tfs.mkdirSync(composeDist(`content/${parseUrl(title)}`))\n\t\t\t\tfs.writeFileSync(\n\t\t\t\t\tcomposeDist(`content/${parseUrl(title)}/index.html`),\n\t\t\t\t\tblog\n\t\t\t\t)\n\n\t\t\t\t/* Pack Image */\n\t\t\t\tlet blogAssets = `${assetsPath}/${parseUrl(title)}`\n\n\t\t\t\tfs.mkdirSync(`${assetsPath}/${parseUrl(title)}`)\n\n\t\t\t\t/* Pack Assets */\n\t\t\t\tlet localAssets = new RegExp(assets, \"g\")\n\n\t\t\t\tlet asLocalContent = JSON.parse(\n\t\t\t\t\tJSON.stringify(parsedBlogContent)\n\t\t\t\t\t\t.replace(localAssets, `/assets/${parseUrl(title)}`)\n\t\t\t\t\t\t.replace(/file\\:\\/\\//g, \"\")\n\t\t\t\t\t\t.replace(/\\n/g, \"\")\n\t\t\t\t)\n\n\t\t\t\tasLocalContent = Object.assign(asLocalContent, {\n\t\t\t\t\tcontent: asLocalContent.content.map((node) => {\n\t\t\t\t\t\tif (node.nodeName !== \"img\") return node\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t...node,\n\t\t\t\t\t\t\tsrc: parseUrl(node.src)\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t})\n\n\t\t\t\tasLocalContent.header.src = parseUrl(asLocalContent.header.src)\n\n\t\t\t\tasLocalContent.footer = {\n\t\t\t\t\tprevious: {\n\t\t\t\t\t\ttitle: previousStory.header.title,\n\t\t\t\t\t\tjson: parseUrl(\n\t\t\t\t\t\t\t`/assets/${previousStory.header.title}/data.json`\n\t\t\t\t\t\t),\n\t\t\t\t\t\tsrc: parseUrl(\n\t\t\t\t\t\t\t`/assets/${previousStory.header.title}/${previousStoryImage}`\n\t\t\t\t\t\t),\n\t\t\t\t\t\talt: previousStory.header.alt,\n\t\t\t\t\t\thref: `/content/${parseUrl(previousStory.header.title)}`\n\t\t\t\t\t},\n\t\t\t\t\tnext: {\n\t\t\t\t\t\ttitle: nextStory.header.title,\n\t\t\t\t\t\tjson: parseUrl(\n\t\t\t\t\t\t\t`/assets/${nextStory.header.title}/data.json`\n\t\t\t\t\t\t),\n\t\t\t\t\t\tsrc: parseUrl(\n\t\t\t\t\t\t\t`/assets/${nextStory.header.title}/${nextStoryImage}`\n\t\t\t\t\t\t),\n\t\t\t\t\t\talt: nextStory.header.title,\n\t\t\t\t\t\thref: `/content/${parseUrl(nextStory.header.title)}`\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfs.writeFileSync(\n\t\t\t\t\t`${assetsPath}/${parseUrl(title)}/data.json`,\n\t\t\t\t\tJSON.stringify(asLocalContent)\n\t\t\t\t)\n\n\t\t\t\tcontent\n\t\t\t\t\t.filter(({ nodeName }) => nodeName === \"img\")\n\t\t\t\t\t.map(async ({ src }) => {\n\t\t\t\t\t\tpackImage(src, blogAssets)\n\t\t\t\t\t})\n\n\t\t\t\tawait packImage(src, blogAssets)\n\t\t\t\tawait packTitle(src, blogAssets)\n\t\t\t\tawait packPreload(src, blogAssets, 430)\n\n\t\t\t\t/* Pack etc */\n\t\t\t\tpackFile(`${basepath}/assets/robots.txt`, dist)\n\t\t\t\tpackFile(`${basepath}/assets/icon.png`, `${dist}/assets`)\n\n\t\t\t\tresolve(true)\n\t\t\t})\n\t\t)\n\n\t/* Pack Service Worker */\n\tawait packContent()\n\tlet serviceWorker = fs.readFileSync(\n\t\t`${basepath}/assets/service-worker.min.js`,\n\t\t{ encoding: \"utf8\" }\n\t)\n\n\tlet cachedAssets = []\n\n\tlet assetsFolder = fs.readdirSync(`${basepath}/generated/dist/assets`)\n\tassetsFolder.forEach((assetFolder) => {\n\t\tlet assetsOrFolder = `${basepath}/generated/dist/assets/${assetFolder}`\n\n\t\tif (!fs.lstatSync(assetsOrFolder).isDirectory())\n\t\t\treturn cachedAssets.push(assetsOrFolder)\n\n\t\tfs.readdirSync(assetsOrFolder).forEach((fileName) => {\n\t\t\tlet file = `${assetsOrFolder}/${fileName}`\n\n\t\t\tcachedAssets.push(file)\n\t\t})\n\t})\n\n\tlet contentFolder = fs.readdirSync(`${basepath}/generated/dist/content`)\n\tcontentFolder.forEach((contentName) => {\n\t\tlet contentFolder = `${basepath}/generated/dist/content/${contentName}`\n\n\t\tfs.readdirSync(contentFolder).forEach((contentFile) => {\n\t\t\tcachedAssets.push(`${contentFolder}/${contentFile}`)\n\t\t})\n\t})\n\n\tcachedAssets = cachedAssets.map((asset) => `\"${asset.replace(dist, \"\")}\"`)\n\tserviceWorker = serviceWorker.replace(\n\t\t\"__Liliya_service_worker__\",\n\t\tcachedAssets\n\t)\n\n\tconsole.log(cachedAssets)\n\n\tfs.writeFileSync(`${dist}/service-worker.js`, serviceWorker)\n}\n\nlet packFile = (path, dest) => {\n\t\tfs.copyFileSync(parseUrl(path), `${dest}/${getFileName(path)}`)\n\t},\n\tpackImage = async (path, destination, size = 640, multiplier = 1.75) => {\n\t\tfs.writeFileSync(\n\t\t\tparseUrl(`${destination}/${getFileName(path)}`),\n\t\t\tawait resizeImage(path, size)\n\t\t)\n\n\t\tfs.writeFileSync(\n\t\t\tparseUrl(`${destination}/${add2xToFileName(getFileName(path))}`),\n\t\t\tawait resizeImage(path, size * multiplier)\n\t\t)\n\n\t\tfs.writeFileSync(\n\t\t\tparseUrl(\n\t\t\t\t`${destination}/${renameExtension(\n\t\t\t\t\t`${getFileName(path)}`,\n\t\t\t\t\t\"webp\"\n\t\t\t\t)}`\n\t\t\t),\n\t\t\tawait resizeImage(path, size, { webp: true })\n\t\t)\n\n\t\tfs.writeFileSync(\n\t\t\t`${destination}/${renameExtension(\n\t\t\t\tparseUrl(`${add2xToFileName(getFileName(path))}`),\n\t\t\t\t\"webp\"\n\t\t\t)}`,\n\t\t\tawait resizeImage(path, size * multiplier, { webp: true })\n\t\t)\n\t},\n\tpackPreload = async (path, destination, size = 400) => {\n\t\tfs.writeFileSync(\n\t\t\tparseUrl(\n\t\t\t\t`${destination}/${addPreloadToFileName(getFileName(path))}`\n\t\t\t),\n\t\t\tawait resizeImage(path, size)\n\t\t)\n\n\t\tfs.writeFileSync(\n\t\t\tparseUrl(\n\t\t\t\t`${destination}/${add2xToFileName(\n\t\t\t\t\taddPreloadToFileName(getFileName(path))\n\t\t\t\t)}`\n\t\t\t),\n\t\t\tawait resizeImage(path, size * 1.5)\n\t\t)\n\n\t\tfs.writeFileSync(\n\t\t\tparseUrl(\n\t\t\t\t`${destination}/${addPreloadToFileName(\n\t\t\t\t\trenameExtension(`${getFileName(path)}`, \"webp\")\n\t\t\t\t)}`\n\t\t\t),\n\t\t\tawait resizeImage(path, size, { webp: true })\n\t\t)\n\n\t\tfs.writeFileSync(\n\t\t\tparseUrl(\n\t\t\t\t`${destination}/${add2xToFileName(\n\t\t\t\t\taddPreloadToFileName(\n\t\t\t\t\t\trenameExtension(getFileName(path), \"webp\")\n\t\t\t\t\t)\n\t\t\t\t)}`\n\t\t\t),\n\t\t\tawait resizeImage(path, size * 1.5, { webp: true })\n\t\t)\n\t},\n\tpackTitle = async (path, destination, size = 1920) => {\n\t\tfs.writeFileSync(\n\t\t\tparseUrl(\n\t\t\t\t`${destination}/${addTitleToFileName(getFileName(path))}`\n\t\t\t),\n\t\t\tawait resizeImage(path, size)\n\t\t)\n\t},\n\tminimizeAndPackCSS = (path, destination) => {\n\t\tlet css = minifyCSS(\n\t\t\tfs.readFileSync(path, {\n\t\t\t\tencoding: \"utf8\"\n\t\t\t})\n\t\t)\n\n\t\tfs.writeFileSync(destination, css)\n\t}\n\nlet build = (title, node) => {\n\tlet built\n\n\tswitch (node.nodeName) {\n\t\tcase \"h1\":\n\t\t\tbuilt = `<h1 class=\"h1\">${node.textContent}</h1>`\n\t\t\tbreak\n\n\t\tcase \"h2\":\n\t\t\tbuilt = `<h2 class=\"h2\">${node.textContent}</h2>`\n\t\t\tbreak\n\n\t\tcase \"p\":\n\t\t\tbuilt = `<p class=\"p\">${node.children\n\t\t\t\t.map((child) =>\n\t\t\t\t\ttypeof child === \"string\"\n\t\t\t\t\t\t? child\n\t\t\t\t\t\t: `<a class=\"a\" href=\"${child.href}\" target=\"_blank\" rel=\"noreopener norefferer\">${child.textContent}</a>`\n\t\t\t\t)\n\t\t\t\t.join(\"\")}</p>`\n\t\t\tbreak\n\n\t\tcase \"img\":\n\t\t\tlet splitSrc = node.src.split(\"/\"),\n\t\t\t\tfileName = splitSrc[splitSrc.length - 1]\n\n\t\t\tbuilt = `<figure class=\"figure\">\n\t\t\t\t\t<picture>\n\t\t\t\t\t\t<source class=\"webp\" srcset=\"${composeSrcSet(\n\t\t\t\t\t\t\ttitle,\n\t\t\t\t\t\t\trenameExtension(fileName, \"webp\")\n\t\t\t\t\t\t)}\" sizes=\"(max-width: 640px) 640px\" type=\"image/webp\" />\n\t\t\t\t\t\t<source class=\"fallback\" srcset=\"${composeSrcSet(\n\t\t\t\t\t\t\ttitle,\n\t\t\t\t\t\t\tfileName\n\t\t\t\t\t\t)}\" sizes=\"(max-width: 640px) 640px\" type=\"${getImageType(fileName)}\" />\n\t\t\t\t\t\t<img id=\"header-image\" class=\"img\" src=\"/assets/${parseUrl(title)}/${parseUrl(\n\t\t\t\tfileName\n\t\t\t)}\" alt=\"${node.alt}\" loading=\"lazy\" />\n\t\t\t\t\t</picture>\n\t\t\t\t</figure>`\n\t\t\tbreak\n\n\t\tdefault:\n\t\t\tbreak\n\t}\n\n\treturn built\n}\n\nlet getFileName = (path) => {\n\t\tlet splited = path.split(\"/\")\n\n\t\treturn splited[splited.length - 1].replace(/\\%20/g, \"-\").toLowerCase()\n\t},\n\trenameExtension = (fileName, extension) => {\n\t\tlet name = fileName.split(\".\")\n\t\tname.splice(name.length - 1, 0, \".\")\n\t\tname.pop()\n\n\t\tname = name.reduce((name, next) => (name += next))\n\t\treturn name + extension\n\t},\n\tadd2xToFileName = (fileName) => {\n\t\tlet name = fileName.split(\".\")\n\t\tname.splice(name.length - 1, 0, \"@2x.\")\n\n\t\treturn name.reduce((name, next) => (name += next))\n\t},\n\taddPreloadToFileName = (fileName) => {\n\t\tlet name = fileName.split(\".\")\n\t\tname.splice(name.length - 1, 0, \"@preload.\")\n\n\t\treturn name.reduce((name, next) => (name += next))\n\t},\n\taddTitleToFileName = (fileName) => {\n\t\tlet name = fileName.split(\".\")\n\t\tname.splice(name.length - 1, 0, \"@title.\")\n\n\t\treturn name.reduce((name, next) => (name += next))\n\t},\n\tcomposeSrcSet = (title, file) => {\n\t\tlet parsedTitle = parseUrl(title),\n\t\t\tparsedFile = parseUrl(file)\n\n\t\treturn (\n\t\t\t`/assets/${parsedTitle}/${parsedFile}` +\n\t\t\t`\\ ,` +\n\t\t\t`/assets/${parsedTitle}/${add2xToFileName(parsedFile)}\\ 2x`\n\t\t)\n\t},\n\tgetImageType = (fileName) => {\n\t\tlet splited = fileName.split(\".\"),\n\t\t\ttype = splited[splited.length - 1]\n\n\t\treturn type === \"png\" ? \"image/png\" : \"image/jpeg\"\n\t},\n\tparseUrl = (path) =>\n\t\tpath\n\t\t\t.replace(/\\ /g, \"-\")\n\t\t\t.replace(new RegExp(\"%20\", \"g\"), \"-\")\n\t\t\t.toLowerCase()\n\nlet minifyHTML = (html) =>\n\t\thtml\n\t\t\t.replace(/\\>[\\r\\n ]+\\</g, \"><\")\n\t\t\t.replace(/(<.*?>)|\\s+/g, (m, $1) => ($1 ? $1 : \" \"))\n\t\t\t.replace(/\\>\\ \\</g, \"><\")\n\t\t\t.trim(),\n\tminifyCSS = (css) => {\n\t\tlet content = css\n\n\t\tcontent = content.replace(/\\/\\*(?:(?!\\*\\/)[\\s\\S])*\\*\\/|[\\r\\n\\t]+/g, \"\")\n\t\t// now all comments, newlines and tabs have been removed\n\t\tcontent = content.replace(/ {2,}/g, \" \")\n\t\t// now there are no more than single adjacent spaces left\n\t\t// now unnecessary: content = content.replace( /(\\s)+\\./g, ' .' );\n\t\tcontent = content.replace(/ ([{:}]) /g, \"$1\")\n\t\tcontent = content.replace(/([;,]) /g, \"$1\")\n\t\tcontent = content.replace(/ !/g, \"!\")\n\n\t\treturn content\n\t}\n\nexport default generateProject\n","import { fs } from './libs/node.js'\nimport { content as contentPath, composeContent } from './libs/directory.js'\nimport { onReady, id } from \"./libs/helpers.js\"\n\nimport { showAvailableProject } from \"./index/template.js\"\nimport generateProject from './index/generate.js'\n\nonReady(() => {\n\tif (!fs.existsSync(contentPath))\n\t\tfs.mkdirSync(contentPath)\n\n\tlet content = fs.readdirSync(contentPath)\n\n\tlet projectList = content.map((file) => {\n\t\tlet project = JSON.parse(\n\t\t\tfs.readFileSync(composeContent(file), {\n\t\t\t\tencoding: \"utf8\"\n\t\t\t})\n\t\t)\n\n\t\treturn {\n\t\t\t...project.header,\n\t\t\tfile\n\t\t}\n\t})\n\n\tshowAvailableProject(projectList)\n\n\tid(\"new-project\").addEventListener(\"click\", () => {\n\t\tfs.writeFileSync(\n\t\t\tcomposeContent(`${projectList.length}.json`),\n\t\t\tJSON.stringify({\n\t\t\t\theader: {\n\t\t\t\t\ttitle: \"My Awesome Project!\"\n\t\t\t\t},\n\t\t\t\tcontent: [\n\t\t\t\t\t{\n\t\t\t\t\t\tnodeName: \"h1\",\n\t\t\t\t\t\ttextContent: \"Hello World\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t})\n\t\t)\n\n\t\tlet anchor = document.createElement(\"a\")\n\t\tanchor.href = `editor.html?file=${projectList.length}.json`\n\n\t\tanchor.click()\n\t})\n\n\tid(\"generate-project\").addEventListener(\"click\", generateProject)\n})\n"]}